imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    swp_multi_tenancy.tenant.class: SWP\Component\MultiTenancy\Model\Tenant

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        handler_id:  ~
        name: SUPERDESKWEBPUBLISHER
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    exception_controller: "FOS\\RestBundle\\Controller\\ExceptionController::showAction"
    strict_variables: false

liip_theme:
    themes: ['theme_1', 'theme_2', 'theme_3']
    active_theme: "%active_theme%"
    load_controllers: false
    autodetect_theme: true
    path_patterns:
        app_resource:
            - "%%app_path%%/themes/%%current_theme%%/%%current_device%%/%%template%%"
            - "%%app_path%%/views/%%current_device%%/%%template%%"

twig_cache:
    service: "doctrine_cache.providers.main_cache"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_pgsql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

    orm:
        resolve_target_entities:
            SWP\Component\MultiTenancy\Model\TenantInterface: %swp_multi_tenancy.tenant.class%
        auto_generate_proxy_classes: "%kernel.debug%"
<<<<<<< HEAD
        auto_mapping: false
        metadata_cache_driver:
            type: service
            id: doctrine_cache.providers.main_cache
        query_cache_driver:
            type: service
            id: doctrine_cache.providers.main_cache
        mappings:
            SWPContentBundle:
                type: yml
                prefix: "SWP\\ContentBundle\\Model"
                dir: Resources/config/doctrine
            SWPTemplateEngineBundle:
                type: yml
                prefix: "SWP\\TemplateEngineBundle\\Model"
                dir: Resources/config/doctrine
=======
        entity_managers:
            default:
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: false
                mappings:
                    SWPContentBundle:
                        type: yml
                        prefix: "SWP\ContentBundle\Model"
                        dir: Resources/config/doctrine
                    SWPMultiTenancyBundle:
                        type: yml
                        prefix: "SWP\Component\MultiTenancy\Model"
                        dir: Resources/config/doctrine
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        is_bundle: false
                filters:
                    soft-deleteable:
                        class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                        enabled: true
                    tenantable:
                        class: SWP\MultiTenancyBundle\Query\Filter\TenantableFilter
                        enabled: true
>>>>>>> d8467da... SWP-83 & SWP-81 multitenancy ORM

doctrine_cache:
    providers:
        main_cache:
            type: %doctrine_cache_driver%

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_http_cache: ~

doctrine_phpcr:
    odm:
        auto_mapping: true
        auto_generate_proxy_classes: "%kernel.debug%"
        metadata_cache_driver:
            type: service
            id: doctrine_cache.providers.main_cache
    session:
        backend:
            type: doctrinedbal
            logging: true
            profiling: true
            check_login_on_server: false
            caches:
                meta: doctrine_cache.providers.main_cache
                nodes: doctrine_cache.providers.main_cache
        workspace: default

cmf_routing:
    chain:
        routers_by_id:
            router.default: 200
            swp_multi_tenancy.tenant_aware_router: 150
            cmf_routing.dynamic_router: 100
    dynamic:
        route_collection_limit: 100
        persistence:
            phpcr:
                enabled: true

fos_rest:
    zone:
        - { path: ^/api/* }
    versioning:
        enabled: false
    routing_loader:
        default_format: json
    view:
        formats:
            json: true
        view_response_listener: false
    serializer:
        serialize_null: true
    format_listener:
        rules:
            - { path: "^/api", priorities: ['json'], fallback_format: json, prefer_extension: true }
            - { path: "^/", stop: true }
    body_listener:
        decoders:
            json: fos_rest.decoder.jsontoform
    disable_csrf_role: ROLE_API
    exception:
        codes:
            "Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException": 404
        messages:
            "Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException": true

sensio_framework_extra:
    view:    { annotations: false }

knp_paginator:
    page_range: 10
    default_options:
        page_name: page
        sort_field_name: sort
        sort_direction_name: direction
        distinct: true

swp_updater:
    version_class: "%swp_updater.version.class%"
    client:
        base_uri: "http://updates.sourcefabric.org"

swp_bridge:
    base_uri: "http://superdesk.dev:5050"

stof_doctrine_extensions:
    default_locale: %locale%
    orm:
        default:
            timestampable: true
            softdeleteable: true
            loggable: true
            sortable: true
nelmio_api_doc:
    request_listener: false

swp_multi_tenancy:
    persistence:
        phpcr:
            enabled: true #enabled: false
            # basepath: "/cms" Symfony cmf core bundle, add possibility to override core bundle's base path and makes it tenant aware?
            basepath: %swp_multi_tenancy.phpcr.basepath%
            route_basepaths: %swp_multi_tenancy.phpcr.route_basepaths% # ~ - to use the RoutingBundle default route base paths.
            # default routing bundle path is /cms/routes. This bundle will make the path tenant aware. Like /cms/tenant1/routes
            # If route base paths option is set, custom names will be used provided (%swp_multi_tenancy.phpcr.route_basepaths%).
            content_basepath: %swp_multi_tenancy.phpcr.content_basepath% # ~
            site_document_class: "SWP\ContentBundle\Document\Site"
